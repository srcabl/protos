syntax = "proto3";

package srcabl.sources;

option go_package ="github.com/srcabl/protos/sources";

import "google/protobuf/empty.proto";
import "shared/source_node.proto";
import "shared/source.proto";

// SourceService defines the behavir of a service managing the sourcing
service SourcesService {

    // HealthCheck is a basic healthcheck endpoint
    rpc HealthCheck(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // DetermineLinkSource determines the source of a link
    rpc DetermineLinkSource(DetermineLinkSourceRequest) returns (DetermineLinkSourceResponse) {}

    //GetSource gets a source
    rpc GetSource(GetSourceRequest) returns (GetSourceResponse) {}

    // CreateSource creates a source
    rpc CreateSource(CreateSourceRequest) returns (CreateSourceRequest) {}
}

// DetermineLinkSourceRequest defines what is needed to source a link
message DetermineLinkSourceRequest{

    // The url that needs to have its source determined
    string url = 1;
}

// DetermineLinkSourceResponse returns the results of DetermineLinkSource
message DetermineLinkSourceResponse {

    // The links source node 
    repeated srcabl.shared.SourceNode primary_source_nodes = 1;
}

// GetSourceRequest defines whast is needed to get a source
message GetSourceRequest {

    // The uuid od the source
    bytes source_uuid = 1;
}

// GetSouceResponse returns the results of GetSource
message GetSourceResponse {

    // The source of the request
    srcabl.shared.Source source = 1;
}

// CreateSourceRequest defines what is need to create a source
message CreateSourceRequest {

    // The name of the source
    string name = 1;

    // The organization the source is associated with
    string organization = 2;
}

// CreataeSourceResponse returns the result of CreateSource
message CreateSourceResponse {

    // The created source
    srcabl.shared.Source source = 1;
}